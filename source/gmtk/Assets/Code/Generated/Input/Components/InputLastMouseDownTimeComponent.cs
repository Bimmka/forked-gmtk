//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherLastMouseDownTime;

    public static Entitas.IMatcher<InputEntity> LastMouseDownTime {
        get {
            if (_matcherLastMouseDownTime == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.LastMouseDownTime);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherLastMouseDownTime = matcher;
            }

            return _matcherLastMouseDownTime;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Code.Gameplay.Input.LastMouseDownTime lastMouseDownTime { get { return (Code.Gameplay.Input.LastMouseDownTime)GetComponent(InputComponentsLookup.LastMouseDownTime); } }
    public float LastMouseDownTime { get { return lastMouseDownTime.Value; } }
    public bool hasLastMouseDownTime { get { return HasComponent(InputComponentsLookup.LastMouseDownTime); } }

    public InputEntity AddLastMouseDownTime(float newValue) {
        var index = InputComponentsLookup.LastMouseDownTime;
        var component = (Code.Gameplay.Input.LastMouseDownTime)CreateComponent(index, typeof(Code.Gameplay.Input.LastMouseDownTime));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public InputEntity ReplaceLastMouseDownTime(float newValue) {
        var index = InputComponentsLookup.LastMouseDownTime;
        var component = (Code.Gameplay.Input.LastMouseDownTime)CreateComponent(index, typeof(Code.Gameplay.Input.LastMouseDownTime));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public InputEntity RemoveLastMouseDownTime() {
        RemoveComponent(InputComponentsLookup.LastMouseDownTime);
        return this;
    }
}
