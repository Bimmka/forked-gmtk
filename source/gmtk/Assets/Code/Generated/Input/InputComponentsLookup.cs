//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class InputComponentsLookup {

    public const int ClickedEntityId = 0;
    public const int ConveyorBeltClicked = 1;
    public const int EmptyClicked = 2;
    public const int FoxClicked = 3;
    public const int RabbitClicked = 4;
    public const int AxisInput = 5;
    public const int Click = 6;
    public const int ClickableLayerMask = 7;
    public const int ClickInterval = 8;
    public const int Dragging = 9;
    public const int Input = 10;
    public const int LastMouseDownTime = 11;
    public const int LastRightMouseDownTime = 12;
    public const int LongTap = 13;
    public const int LongTapInterval = 14;
    public const int LongTapPressed = 15;
    public const int MouseDown = 16;
    public const int MousePressed = 17;
    public const int MouseUp = 18;
    public const int PositionShiftForDragStart = 19;
    public const int RightClick = 20;
    public const int RightMouseDown = 21;
    public const int RightMousePressed = 22;
    public const int RightMouseUp = 23;
    public const int ScreenMousePosition = 24;
    public const int StartMouseDownScreenPosition = 25;
    public const int StartMouseDownWorldPosition = 26;
    public const int WasDragging = 27;
    public const int WorldMousePosition = 28;

    public const int TotalComponents = 29;

    public static readonly string[] componentNames = {
        "ClickedEntityId",
        "ConveyorBeltClicked",
        "EmptyClicked",
        "FoxClicked",
        "RabbitClicked",
        "AxisInput",
        "Click",
        "ClickableLayerMask",
        "ClickInterval",
        "Dragging",
        "Input",
        "LastMouseDownTime",
        "LastRightMouseDownTime",
        "LongTap",
        "LongTapInterval",
        "LongTapPressed",
        "MouseDown",
        "MousePressed",
        "MouseUp",
        "PositionShiftForDragStart",
        "RightClick",
        "RightMouseDown",
        "RightMousePressed",
        "RightMouseUp",
        "ScreenMousePosition",
        "StartMouseDownScreenPosition",
        "StartMouseDownWorldPosition",
        "WasDragging",
        "WorldMousePosition"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Gameplay.Features.ClickHandle.ClickedEntityId),
        typeof(Code.Gameplay.Features.ClickHandle.ConveyorBeltClicked),
        typeof(Code.Gameplay.Features.ClickHandle.EmptyClicked),
        typeof(Code.Gameplay.Features.ClickHandle.FoxClicked),
        typeof(Code.Gameplay.Features.ClickHandle.RabbitClicked),
        typeof(Code.Gameplay.Input.AxisInput),
        typeof(Code.Gameplay.Input.Click),
        typeof(Code.Gameplay.Input.ClickableLayerMask),
        typeof(Code.Gameplay.Input.ClickInterval),
        typeof(Code.Gameplay.Input.Dragging),
        typeof(Code.Gameplay.Input.Input),
        typeof(Code.Gameplay.Input.LastMouseDownTime),
        typeof(Code.Gameplay.Input.LastRightMouseDownTime),
        typeof(Code.Gameplay.Input.LongTap),
        typeof(Code.Gameplay.Input.LongTapInterval),
        typeof(Code.Gameplay.Input.LongTapPressed),
        typeof(Code.Gameplay.Input.MouseDown),
        typeof(Code.Gameplay.Input.MousePressed),
        typeof(Code.Gameplay.Input.MouseUp),
        typeof(Code.Gameplay.Input.PositionShiftForDragStart),
        typeof(Code.Gameplay.Input.RightClick),
        typeof(Code.Gameplay.Input.RightMouseDown),
        typeof(Code.Gameplay.Input.RightMousePressed),
        typeof(Code.Gameplay.Input.RightMouseUp),
        typeof(Code.Gameplay.Input.ScreenMousePosition),
        typeof(Code.Gameplay.Input.StartMouseDownScreenPosition),
        typeof(Code.Gameplay.Input.StartMouseDownWorldPosition),
        typeof(Code.Gameplay.Input.WasDragging),
        typeof(Code.Gameplay.Input.WorldMousePosition)
    };
}
