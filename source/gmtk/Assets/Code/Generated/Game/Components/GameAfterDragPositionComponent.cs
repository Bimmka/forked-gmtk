//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAfterDragPosition;

    public static Entitas.IMatcher<GameEntity> AfterDragPosition {
        get {
            if (_matcherAfterDragPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AfterDragPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAfterDragPosition = matcher;
            }

            return _matcherAfterDragPosition;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Selection.AfterDragPosition afterDragPosition { get { return (Code.Gameplay.Features.Selection.AfterDragPosition)GetComponent(GameComponentsLookup.AfterDragPosition); } }
    public UnityEngine.Vector3 AfterDragPosition { get { return afterDragPosition.Value; } }
    public bool hasAfterDragPosition { get { return HasComponent(GameComponentsLookup.AfterDragPosition); } }

    public GameEntity AddAfterDragPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.AfterDragPosition;
        var component = (Code.Gameplay.Features.Selection.AfterDragPosition)CreateComponent(index, typeof(Code.Gameplay.Features.Selection.AfterDragPosition));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAfterDragPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.AfterDragPosition;
        var component = (Code.Gameplay.Features.Selection.AfterDragPosition)CreateComponent(index, typeof(Code.Gameplay.Features.Selection.AfterDragPosition));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAfterDragPosition() {
        RemoveComponent(GameComponentsLookup.AfterDragPosition);
        return this;
    }
}
