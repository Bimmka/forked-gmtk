//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMultipleSelectionWindow;

    public static Entitas.IMatcher<GameEntity> MultipleSelectionWindow {
        get {
            if (_matcherMultipleSelectionWindow == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MultipleSelectionWindow);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMultipleSelectionWindow = matcher;
            }

            return _matcherMultipleSelectionWindow;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Selection.MultipleSelectionWindowComponent multipleSelectionWindow { get { return (Code.Gameplay.Features.Selection.MultipleSelectionWindowComponent)GetComponent(GameComponentsLookup.MultipleSelectionWindow); } }
    public Code.Gameplay.Features.Selection.Visuals.MultipleSelectionWindow MultipleSelectionWindow { get { return multipleSelectionWindow.Value; } }
    public bool hasMultipleSelectionWindow { get { return HasComponent(GameComponentsLookup.MultipleSelectionWindow); } }

    public GameEntity AddMultipleSelectionWindow(Code.Gameplay.Features.Selection.Visuals.MultipleSelectionWindow newValue) {
        var index = GameComponentsLookup.MultipleSelectionWindow;
        var component = (Code.Gameplay.Features.Selection.MultipleSelectionWindowComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Selection.MultipleSelectionWindowComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMultipleSelectionWindow(Code.Gameplay.Features.Selection.Visuals.MultipleSelectionWindow newValue) {
        var index = GameComponentsLookup.MultipleSelectionWindow;
        var component = (Code.Gameplay.Features.Selection.MultipleSelectionWindowComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Selection.MultipleSelectionWindowComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMultipleSelectionWindow() {
        RemoveComponent(GameComponentsLookup.MultipleSelectionWindow);
        return this;
    }
}
