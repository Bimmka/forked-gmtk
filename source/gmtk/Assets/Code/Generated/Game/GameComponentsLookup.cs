//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Id = 1;
    public const int Radius = 2;
    public const int SelfDestructTimer = 3;
    public const int View = 4;
    public const int ViewPath = 5;
    public const int ViewPrefab = 6;
    public const int ParentTransform = 7;
    public const int RotationTransform = 8;
    public const int SaveRotationInSpawn = 9;
    public const int SpriteRenderer = 10;
    public const int Transform = 11;
    public const int WorldPosition = 12;
    public const int BaseStats = 13;
    public const int EffectValue = 14;
    public const int StatChange = 15;
    public const int StatModifiers = 16;
    public const int TargetId = 17;
    public const int ConveyorBelt = 18;
    public const int ConveyorEndPoint = 19;
    public const int ConveyorEndStall = 20;
    public const int ConveyoringFinished = 21;
    public const int ConveyoringStarted = 22;
    public const int ConveyorMoveDirection = 23;
    public const int ConveyorStartPoint = 24;
    public const int ConveyorStartStall = 25;
    public const int ElementsOnConveyor = 26;
    public const int OnConveyorBelt = 27;
    public const int ParentConveyorBeltId = 28;
    public const int AttachedSound = 29;
    public const int BeforeNextHuntInterval = 30;
    public const int BeforeNextHuntTimeLeft = 31;
    public const int Eaten = 32;
    public const int Eating = 33;
    public const int EatingDuration = 34;
    public const int EatingFinished = 35;
    public const int EatingStarted = 36;
    public const int EatingTimeLeft = 37;
    public const int Fox = 38;
    public const int FoxAnimator = 39;
    public const int FoxVisualChanger = 40;
    public const int GotEnough = 41;
    public const int Hungry = 42;
    public const int HuntDuration = 43;
    public const int HuntFinished = 44;
    public const int Hunting = 45;
    public const int HuntStarted = 46;
    public const int HuntTarget = 47;
    public const int HuntTimeLeft = 48;
    public const int InvalidHuntTarget = 49;
    public const int MovingToHuntTarget = 50;
    public const int MovingToRandomPoint = 51;
    public const int NearHuntTarget = 52;
    public const int NoValidTargets = 53;
    public const int SickVisualChanger = 54;
    public const int TargetAmountGot = 55;
    public const int TargetAmountToGetEnough = 56;
    public const int ValidHuntTarget = 57;
    public const int WaitingHunt = 58;
    public const int WaitingNextHuntTarget = 59;
    public const int Active = 60;
    public const int Hole = 61;
    public const int HoleEntitySpawnData = 62;
    public const int Inactive = 63;
    public const int SpawnAmount = 64;
    public const int SpawnInterval = 65;
    public const int SpawnTimeLeft = 66;
    public const int SpawnUp = 67;
    public const int CanBeInfectedByPoison = 68;
    public const int CanBeInfectedByRabies = 69;
    public const int CarrierOfInfection = 70;
    public const int CarrierOfInfectionId = 71;
    public const int CarrierOfPoisonInfection = 72;
    public const int CarrierOfRabiesInfection = 73;
    public const int ChanceToInfect = 74;
    public const int Infection = 75;
    public const int InfectionInterval = 76;
    public const int InfectionLayerMask = 77;
    public const int InfectionRadius = 78;
    public const int InfectionTrayLength = 79;
    public const int InfectionTrayWidth = 80;
    public const int InfectionType = 81;
    public const int InfectionUp = 82;
    public const int LevelInfection = 83;
    public const int PoisoningInfection = 84;
    public const int RabiesInfection = 85;
    public const int TimeLeftBeforeInfection = 86;
    public const int ValidInfection = 87;
    public const int Lose = 88;
    public const int Win = 89;
    public const int AmountConditionCompleted = 90;
    public const int AmountConditionUncompleted = 91;
    public const int Completed = 92;
    public const int ConditionsCompleted = 93;
    public const int ConditionsUncompleted = 94;
    public const int DecreaseHoldTimeProgressSpeed = 95;
    public const int Failed = 96;
    public const int GameTaskStatusPanel = 97;
    public const int LevelTask = 98;
    public const int LevelTaskAmountConditionType = 99;
    public const int LevelTaskCommonRabbitAmount = 100;
    public const int LevelTaskConcreteRabbitAmount = 101;
    public const int LevelTaskCurrentCommonAmount = 102;
    public const int LevelTaskCurrentConcreteRabbitsAmount = 103;
    public const int LevelTaskDurationBeforeExpired = 104;
    public const int LevelTaskDurationBeforeExpiredTimeLeft = 105;
    public const int LevelTaskDurationLimitations = 106;
    public const int LevelTaskGoalForConcreteRabbits = 107;
    public const int LevelTaskMaxRabbitAmount = 108;
    public const int LevelTaskMinAmountType = 109;
    public const int LevelTaskMinRabbitAmount = 110;
    public const int LevelTaskRangeAmountType = 111;
    public const int LevelTaskRemoveAllRabbits = 112;
    public const int LevelTaskTargetHoldDuration = 113;
    public const int LevelTaskTargetHoldDurationTime = 114;
    public const int LevelTaskTargetHoldDurationTimeHasProgress = 115;
    public const int LevelTaskTargetHoldDurationTimeNoProgress = 116;
    public const int LevelTaskTimeExpired = 117;
    public const int LevelTaskType = 118;
    public const int LevelTaskWithHoldDuration = 119;
    public const int LevelTaskWithTimeForFail = 120;
    public const int NoChances = 121;
    public const int TimeConditionCompleted = 122;
    public const int TimeConditionUncompleted = 123;
    public const int TimeDurationConditionCompleted = 124;
    public const int TimeDurationConditionFailed = 125;
    public const int TimeHoldConditionCompleted = 126;
    public const int TimeHoldConditionUncompleted = 127;
    public const int Uncompleted = 128;
    public const int WaitingHoldTime = 129;
    public const int MoveDirection = 130;
    public const int MovementAvailable = 131;
    public const int Moving = 132;
    public const int Speed = 133;
    public const int TargetPoint = 134;
    public const int TargetPointReached = 135;
    public const int TurnedAlongDirection = 136;
    public const int ActivityFree = 137;
    public const int Alive = 138;
    public const int CanBeChosenForReplication = 139;
    public const int CanSpawnRecessive = 140;
    public const int CanStartReplication = 141;
    public const int ChosenForReplication = 142;
    public const int ChosenForReplicationBy = 143;
    public const int CleanupMovingFinished = 144;
    public const int CleanupResetReplicationMarkers = 145;
    public const int CurrentReplicationDuration = 146;
    public const int Dead = 147;
    public const int DeadByInfection = 148;
    public const int DefaultReplicationDuration = 149;
    public const int InDanger = 150;
    public const int InSafety = 151;
    public const int InvalidReplicationTarget = 152;
    public const int MovingFinished = 153;
    public const int MovingInterval = 154;
    public const int MovingToReplicationTarget = 155;
    public const int MovingUp = 156;
    public const int NearReplicationTarget = 157;
    public const int OnGround = 158;
    public const int ProcessingDeath = 159;
    public const int Rabbit = 160;
    public const int RabbitAnimator = 161;
    public const int RabbitColorType = 162;
    public const int RabbitVisualChanger = 163;
    public const int Replicating = 164;
    public const int ReplicationAvailable = 165;
    public const int ReplicationBlocked = 166;
    public const int ReplicationExpired = 167;
    public const int ReplicationFinished = 168;
    public const int ReplicationInterval = 169;
    public const int ReplicationTarget = 170;
    public const int ReplicationTimeLeft = 171;
    public const int ReplicationTimeUp = 172;
    public const int ResetReplicationProcess = 173;
    public const int Sociopath = 174;
    public const int SociopathVisualApplied = 175;
    public const int StallParentIndex = 176;
    public const int TimeLeftForMoving = 177;
    public const int TimeLeftForNextReplication = 178;
    public const int ValidReplicationTarget = 179;
    public const int WaitingForMoving = 180;
    public const int WaitingForNextReplicationUp = 181;
    public const int WaitingReplicationTarget = 182;
    public const int WaitReplicationDuration = 183;
    public const int WaitReplicationTimeLeft = 184;
    public const int WantToReplicate = 185;
    public const int AfterDragPosition = 186;
    public const int CleanupUnselectMark = 187;
    public const int DragCanceled = 188;
    public const int DragFinished = 189;
    public const int Dragging = 190;
    public const int DragStarted = 191;
    public const int DragStopped = 192;
    public const int EntitiesForReleaseQueue = 193;
    public const int EntitiesForSelectionQueue = 194;
    public const int FollowSelectCenterSpeed = 195;
    public const int HasSelections = 196;
    public const int MoveToAfterDragPositionSpeed = 197;
    public const int MovingToAfterDragPosition = 198;
    public const int MovingToConveyorBeltAfterDrag = 199;
    public const int MultipleSelectionWindow = 200;
    public const int ReleaseFromDragUp = 201;
    public const int SavedPositionBeforeDrag = 202;
    public const int Selectable = 203;
    public const int SelectCenterPosition = 204;
    public const int SelectCenterRadius = 205;
    public const int Selected = 206;
    public const int SelectedEntities = 207;
    public const int Selection = 208;
    public const int SelectionBounds = 209;
    public const int SelectionDragMaxTime = 210;
    public const int SelectionDragTimeLeft = 211;
    public const int ShiftFromSelect = 212;
    public const int StoppedWaitingMouseDragFinish = 213;
    public const int UnselectSelectedEntities = 214;
    public const int WaitingMouseDragFinish = 215;
    public const int CurrentRabbitsAmountBeforeDive = 216;
    public const int DelayBeforeDive = 217;
    public const int DelayBeforeDiveLeft = 218;
    public const int IslandStalls = 219;
    public const int JustSunken = 220;
    public const int MaxRabbitsAmountBeforeDive = 221;
    public const int NextDiveTime = 222;
    public const int NextDiveTimeLeft = 223;
    public const int SinkingByTimeIsland = 224;
    public const int SinkingByWeightIsland = 225;
    public const int SinkingIsland = 226;
    public const int StayOnIsland = 227;
    public const int Sunken = 228;
    public const int Surfaced = 229;
    public const int ToSurfaceTime = 230;
    public const int ToSurfaceTimeLeft = 231;
    public const int WaitingDiveIsland = 232;
    public const int WaitingSurfaceIsland = 233;
    public const int RabbitsAmount = 234;
    public const int Stall = 235;
    public const int StallBounds = 236;
    public const int StallIndex = 237;
    public const int Affected = 238;
    public const int Applied = 239;
    public const int ApplierStatusLink = 240;
    public const int Duration = 241;
    public const int Period = 242;
    public const int PoisonStatus = 243;
    public const int RabiesStatus = 244;
    public const int Status = 245;
    public const int StatusTypeId = 246;
    public const int TimeLeft = 247;
    public const int TimeSinceLastTick = 248;
    public const int Unapplied = 249;
    public const int ValidStatus = 250;
    public const int CollectingTargetsContinuously = 251;
    public const int CollectTargetsInterval = 252;
    public const int CollectTargetsTimeLeft = 253;
    public const int ProcessedTargets = 254;
    public const int ReadyToCollectTargets = 255;
    public const int TargetBuffer = 256;
    public const int TargetCollectionCastPoint = 257;
    public const int TargetCollectionLayerMask = 258;
    public const int TargetLimit = 259;

    public const int TotalComponents = 260;

    public static readonly string[] componentNames = {
        "Destructed",
        "Id",
        "Radius",
        "SelfDestructTimer",
        "View",
        "ViewPath",
        "ViewPrefab",
        "ParentTransform",
        "RotationTransform",
        "SaveRotationInSpawn",
        "SpriteRenderer",
        "Transform",
        "WorldPosition",
        "BaseStats",
        "EffectValue",
        "StatChange",
        "StatModifiers",
        "TargetId",
        "ConveyorBelt",
        "ConveyorEndPoint",
        "ConveyorEndStall",
        "ConveyoringFinished",
        "ConveyoringStarted",
        "ConveyorMoveDirection",
        "ConveyorStartPoint",
        "ConveyorStartStall",
        "ElementsOnConveyor",
        "OnConveyorBelt",
        "ParentConveyorBeltId",
        "AttachedSound",
        "BeforeNextHuntInterval",
        "BeforeNextHuntTimeLeft",
        "Eaten",
        "Eating",
        "EatingDuration",
        "EatingFinished",
        "EatingStarted",
        "EatingTimeLeft",
        "Fox",
        "FoxAnimator",
        "FoxVisualChanger",
        "GotEnough",
        "Hungry",
        "HuntDuration",
        "HuntFinished",
        "Hunting",
        "HuntStarted",
        "HuntTarget",
        "HuntTimeLeft",
        "InvalidHuntTarget",
        "MovingToHuntTarget",
        "MovingToRandomPoint",
        "NearHuntTarget",
        "NoValidTargets",
        "SickVisualChanger",
        "TargetAmountGot",
        "TargetAmountToGetEnough",
        "ValidHuntTarget",
        "WaitingHunt",
        "WaitingNextHuntTarget",
        "Active",
        "Hole",
        "HoleEntitySpawnData",
        "Inactive",
        "SpawnAmount",
        "SpawnInterval",
        "SpawnTimeLeft",
        "SpawnUp",
        "CanBeInfectedByPoison",
        "CanBeInfectedByRabies",
        "CarrierOfInfection",
        "CarrierOfInfectionId",
        "CarrierOfPoisonInfection",
        "CarrierOfRabiesInfection",
        "ChanceToInfect",
        "Infection",
        "InfectionInterval",
        "InfectionLayerMask",
        "InfectionRadius",
        "InfectionTrayLength",
        "InfectionTrayWidth",
        "InfectionType",
        "InfectionUp",
        "LevelInfection",
        "PoisoningInfection",
        "RabiesInfection",
        "TimeLeftBeforeInfection",
        "ValidInfection",
        "Lose",
        "Win",
        "AmountConditionCompleted",
        "AmountConditionUncompleted",
        "Completed",
        "ConditionsCompleted",
        "ConditionsUncompleted",
        "DecreaseHoldTimeProgressSpeed",
        "Failed",
        "GameTaskStatusPanel",
        "LevelTask",
        "LevelTaskAmountConditionType",
        "LevelTaskCommonRabbitAmount",
        "LevelTaskConcreteRabbitAmount",
        "LevelTaskCurrentCommonAmount",
        "LevelTaskCurrentConcreteRabbitsAmount",
        "LevelTaskDurationBeforeExpired",
        "LevelTaskDurationBeforeExpiredTimeLeft",
        "LevelTaskDurationLimitations",
        "LevelTaskGoalForConcreteRabbits",
        "LevelTaskMaxRabbitAmount",
        "LevelTaskMinAmountType",
        "LevelTaskMinRabbitAmount",
        "LevelTaskRangeAmountType",
        "LevelTaskRemoveAllRabbits",
        "LevelTaskTargetHoldDuration",
        "LevelTaskTargetHoldDurationTime",
        "LevelTaskTargetHoldDurationTimeHasProgress",
        "LevelTaskTargetHoldDurationTimeNoProgress",
        "LevelTaskTimeExpired",
        "LevelTaskType",
        "LevelTaskWithHoldDuration",
        "LevelTaskWithTimeForFail",
        "NoChances",
        "TimeConditionCompleted",
        "TimeConditionUncompleted",
        "TimeDurationConditionCompleted",
        "TimeDurationConditionFailed",
        "TimeHoldConditionCompleted",
        "TimeHoldConditionUncompleted",
        "Uncompleted",
        "WaitingHoldTime",
        "MoveDirection",
        "MovementAvailable",
        "Moving",
        "Speed",
        "TargetPoint",
        "TargetPointReached",
        "TurnedAlongDirection",
        "ActivityFree",
        "Alive",
        "CanBeChosenForReplication",
        "CanSpawnRecessive",
        "CanStartReplication",
        "ChosenForReplication",
        "ChosenForReplicationBy",
        "CleanupMovingFinished",
        "CleanupResetReplicationMarkers",
        "CurrentReplicationDuration",
        "Dead",
        "DeadByInfection",
        "DefaultReplicationDuration",
        "InDanger",
        "InSafety",
        "InvalidReplicationTarget",
        "MovingFinished",
        "MovingInterval",
        "MovingToReplicationTarget",
        "MovingUp",
        "NearReplicationTarget",
        "OnGround",
        "ProcessingDeath",
        "Rabbit",
        "RabbitAnimator",
        "RabbitColorType",
        "RabbitVisualChanger",
        "Replicating",
        "ReplicationAvailable",
        "ReplicationBlocked",
        "ReplicationExpired",
        "ReplicationFinished",
        "ReplicationInterval",
        "ReplicationTarget",
        "ReplicationTimeLeft",
        "ReplicationTimeUp",
        "ResetReplicationProcess",
        "Sociopath",
        "SociopathVisualApplied",
        "StallParentIndex",
        "TimeLeftForMoving",
        "TimeLeftForNextReplication",
        "ValidReplicationTarget",
        "WaitingForMoving",
        "WaitingForNextReplicationUp",
        "WaitingReplicationTarget",
        "WaitReplicationDuration",
        "WaitReplicationTimeLeft",
        "WantToReplicate",
        "AfterDragPosition",
        "CleanupUnselectMark",
        "DragCanceled",
        "DragFinished",
        "Dragging",
        "DragStarted",
        "DragStopped",
        "EntitiesForReleaseQueue",
        "EntitiesForSelectionQueue",
        "FollowSelectCenterSpeed",
        "HasSelections",
        "MoveToAfterDragPositionSpeed",
        "MovingToAfterDragPosition",
        "MovingToConveyorBeltAfterDrag",
        "MultipleSelectionWindow",
        "ReleaseFromDragUp",
        "SavedPositionBeforeDrag",
        "Selectable",
        "SelectCenterPosition",
        "SelectCenterRadius",
        "Selected",
        "SelectedEntities",
        "Selection",
        "SelectionBounds",
        "SelectionDragMaxTime",
        "SelectionDragTimeLeft",
        "ShiftFromSelect",
        "StoppedWaitingMouseDragFinish",
        "UnselectSelectedEntities",
        "WaitingMouseDragFinish",
        "CurrentRabbitsAmountBeforeDive",
        "DelayBeforeDive",
        "DelayBeforeDiveLeft",
        "IslandStalls",
        "JustSunken",
        "MaxRabbitsAmountBeforeDive",
        "NextDiveTime",
        "NextDiveTimeLeft",
        "SinkingByTimeIsland",
        "SinkingByWeightIsland",
        "SinkingIsland",
        "StayOnIsland",
        "Sunken",
        "Surfaced",
        "ToSurfaceTime",
        "ToSurfaceTimeLeft",
        "WaitingDiveIsland",
        "WaitingSurfaceIsland",
        "RabbitsAmount",
        "Stall",
        "StallBounds",
        "StallIndex",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "Duration",
        "Period",
        "PoisonStatus",
        "RabiesStatus",
        "Status",
        "StatusTypeId",
        "TimeLeft",
        "TimeSinceLastTick",
        "Unapplied",
        "ValidStatus",
        "CollectingTargetsContinuously",
        "CollectTargetsInterval",
        "CollectTargetsTimeLeft",
        "ProcessedTargets",
        "ReadyToCollectTargets",
        "TargetBuffer",
        "TargetCollectionCastPoint",
        "TargetCollectionLayerMask",
        "TargetLimit"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Id),
        typeof(Code.Common.Radius),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewPath),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.ParentTransform),
        typeof(Code.Gameplay.Common.RotationTransformComponent),
        typeof(Code.Gameplay.Common.SaveRotationInSpawn),
        typeof(Code.Gameplay.Common.SpriteRendererComponent),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.CharacterStats.BaseStats),
        typeof(Code.Gameplay.Features.CharacterStats.EffectValue),
        typeof(Code.Gameplay.Features.CharacterStats.StatChange),
        typeof(Code.Gameplay.Features.CharacterStats.StatModifiers),
        typeof(Code.Gameplay.Features.CharacterStats.TargetId),
        typeof(Code.Gameplay.Features.ConveyorBelt.ConveyorBelt),
        typeof(Code.Gameplay.Features.ConveyorBelt.ConveyorEndPoint),
        typeof(Code.Gameplay.Features.ConveyorBelt.ConveyorEndStall),
        typeof(Code.Gameplay.Features.ConveyorBelt.ConveyoringFinished),
        typeof(Code.Gameplay.Features.ConveyorBelt.ConveyoringStarted),
        typeof(Code.Gameplay.Features.ConveyorBelt.ConveyorMoveDirection),
        typeof(Code.Gameplay.Features.ConveyorBelt.ConveyorStartPoint),
        typeof(Code.Gameplay.Features.ConveyorBelt.ConveyorStartStall),
        typeof(Code.Gameplay.Features.ConveyorBelt.ElementsOnConveyor),
        typeof(Code.Gameplay.Features.ConveyorBelt.OnConveyorBelt),
        typeof(Code.Gameplay.Features.ConveyorBelt.ParentConveyorBeltId),
        typeof(Code.Gameplay.Features.Foxes.AttachedSound),
        typeof(Code.Gameplay.Features.Foxes.BeforeNextHuntInterval),
        typeof(Code.Gameplay.Features.Foxes.BeforeNextHuntTimeLeft),
        typeof(Code.Gameplay.Features.Foxes.Eaten),
        typeof(Code.Gameplay.Features.Foxes.Eating),
        typeof(Code.Gameplay.Features.Foxes.EatingDuration),
        typeof(Code.Gameplay.Features.Foxes.EatingFinished),
        typeof(Code.Gameplay.Features.Foxes.EatingStarted),
        typeof(Code.Gameplay.Features.Foxes.EatingTimeLeft),
        typeof(Code.Gameplay.Features.Foxes.Fox),
        typeof(Code.Gameplay.Features.Foxes.FoxAnimatorComponent),
        typeof(Code.Gameplay.Features.Foxes.FoxVisualChangerComponent),
        typeof(Code.Gameplay.Features.Foxes.GotEnough),
        typeof(Code.Gameplay.Features.Foxes.Hungry),
        typeof(Code.Gameplay.Features.Foxes.HuntDuration),
        typeof(Code.Gameplay.Features.Foxes.HuntFinished),
        typeof(Code.Gameplay.Features.Foxes.Hunting),
        typeof(Code.Gameplay.Features.Foxes.HuntStarted),
        typeof(Code.Gameplay.Features.Foxes.HuntTarget),
        typeof(Code.Gameplay.Features.Foxes.HuntTimeLeft),
        typeof(Code.Gameplay.Features.Foxes.InvalidHuntTarget),
        typeof(Code.Gameplay.Features.Foxes.MovingToHuntTarget),
        typeof(Code.Gameplay.Features.Foxes.MovingToRandomPoint),
        typeof(Code.Gameplay.Features.Foxes.NearHuntTarget),
        typeof(Code.Gameplay.Features.Foxes.NoValidTargets),
        typeof(Code.Gameplay.Features.Foxes.SickVisualChangerComponent),
        typeof(Code.Gameplay.Features.Foxes.TargetAmountGot),
        typeof(Code.Gameplay.Features.Foxes.TargetAmountToGetEnough),
        typeof(Code.Gameplay.Features.Foxes.ValidHuntTarget),
        typeof(Code.Gameplay.Features.Foxes.WaitingHunt),
        typeof(Code.Gameplay.Features.Foxes.WaitingNextHuntTarget),
        typeof(Code.Gameplay.Features.Holes.Active),
        typeof(Code.Gameplay.Features.Holes.Hole),
        typeof(Code.Gameplay.Features.Holes.HoleEntitySpawnDataComponent),
        typeof(Code.Gameplay.Features.Holes.Inactive),
        typeof(Code.Gameplay.Features.Holes.SpawnAmount),
        typeof(Code.Gameplay.Features.Holes.SpawnInterval),
        typeof(Code.Gameplay.Features.Holes.SpawnTimeLeft),
        typeof(Code.Gameplay.Features.Holes.SpawnUp),
        typeof(Code.Gameplay.Features.Infections.CanBeInfectedByPoison),
        typeof(Code.Gameplay.Features.Infections.CanBeInfectedByRabies),
        typeof(Code.Gameplay.Features.Infections.CarrierOfInfection),
        typeof(Code.Gameplay.Features.Infections.CarrierOfInfectionId),
        typeof(Code.Gameplay.Features.Infections.CarrierOfPoisonInfection),
        typeof(Code.Gameplay.Features.Infections.CarrierOfRabiesInfection),
        typeof(Code.Gameplay.Features.Infections.ChanceToInfect),
        typeof(Code.Gameplay.Features.Infections.Infection),
        typeof(Code.Gameplay.Features.Infections.InfectionInterval),
        typeof(Code.Gameplay.Features.Infections.InfectionLayerMask),
        typeof(Code.Gameplay.Features.Infections.InfectionRadius),
        typeof(Code.Gameplay.Features.Infections.InfectionTrayLength),
        typeof(Code.Gameplay.Features.Infections.InfectionTrayWidth),
        typeof(Code.Gameplay.Features.Infections.InfectionTypeComponent),
        typeof(Code.Gameplay.Features.Infections.InfectionUp),
        typeof(Code.Gameplay.Features.Infections.LevelInfection),
        typeof(Code.Gameplay.Features.Infections.PoisoningInfection),
        typeof(Code.Gameplay.Features.Infections.RabiesInfection),
        typeof(Code.Gameplay.Features.Infections.TimeLeftBeforeInfection),
        typeof(Code.Gameplay.Features.Infections.ValidInfection),
        typeof(Code.Gameplay.Features.LevelFinish.Lose),
        typeof(Code.Gameplay.Features.LevelFinish.Win),
        typeof(Code.Gameplay.Features.LevelTasks.AmountConditionCompleted),
        typeof(Code.Gameplay.Features.LevelTasks.AmountConditionUncompleted),
        typeof(Code.Gameplay.Features.LevelTasks.Completed),
        typeof(Code.Gameplay.Features.LevelTasks.ConditionsCompleted),
        typeof(Code.Gameplay.Features.LevelTasks.ConditionsUncompleted),
        typeof(Code.Gameplay.Features.LevelTasks.DecreaseHoldTimeProgressSpeed),
        typeof(Code.Gameplay.Features.LevelTasks.Failed),
        typeof(Code.Gameplay.Features.LevelTasks.GameTaskStatusPanelComponent),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTask),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskAmountConditionTypeComponent),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskCommonRabbitAmount),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskConcreteRabbitAmount),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskCurrentCommonAmount),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskCurrentConcreteRabbitsAmount),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskDurationBeforeExpired),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskDurationBeforeExpiredTimeLeft),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskDurationLimitations),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskGoalForConcreteRabbits),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskMaxRabbitAmount),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskMinAmountType),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskMinRabbitAmount),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskRangeAmountType),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskRemoveAllRabbits),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskTargetHoldDuration),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskTargetHoldDurationTime),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskTargetHoldDurationTimeHasProgress),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskTargetHoldDurationTimeNoProgress),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskTimeExpired),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskTypeComponent),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskWithHoldDuration),
        typeof(Code.Gameplay.Features.LevelTasks.LevelTaskWithTimeForFail),
        typeof(Code.Gameplay.Features.LevelTasks.NoChances),
        typeof(Code.Gameplay.Features.LevelTasks.TimeConditionCompleted),
        typeof(Code.Gameplay.Features.LevelTasks.TimeConditionUncompleted),
        typeof(Code.Gameplay.Features.LevelTasks.TimeDurationConditionCompleted),
        typeof(Code.Gameplay.Features.LevelTasks.TimeDurationConditionFailed),
        typeof(Code.Gameplay.Features.LevelTasks.TimeHoldConditionCompleted),
        typeof(Code.Gameplay.Features.LevelTasks.TimeHoldConditionUncompleted),
        typeof(Code.Gameplay.Features.LevelTasks.Uncompleted),
        typeof(Code.Gameplay.Features.LevelTasks.WaitingHoldTime),
        typeof(Code.Gameplay.Features.Movement.MoveDirection),
        typeof(Code.Gameplay.Features.Movement.MovementAvailable),
        typeof(Code.Gameplay.Features.Movement.Moving),
        typeof(Code.Gameplay.Features.Movement.Speed),
        typeof(Code.Gameplay.Features.Movement.TargetPoint),
        typeof(Code.Gameplay.Features.Movement.TargetPointReached),
        typeof(Code.Gameplay.Features.Movement.TurnedAlongDirection),
        typeof(Code.Gameplay.Features.Rabbits.ActivityFree),
        typeof(Code.Gameplay.Features.Rabbits.Alive),
        typeof(Code.Gameplay.Features.Rabbits.CanBeChosenForReplication),
        typeof(Code.Gameplay.Features.Rabbits.CanSpawnRecessive),
        typeof(Code.Gameplay.Features.Rabbits.CanStartReplication),
        typeof(Code.Gameplay.Features.Rabbits.ChosenForReplication),
        typeof(Code.Gameplay.Features.Rabbits.ChosenForReplicationBy),
        typeof(Code.Gameplay.Features.Rabbits.CleanupMovingFinished),
        typeof(Code.Gameplay.Features.Rabbits.CleanupResetReplicationMarkers),
        typeof(Code.Gameplay.Features.Rabbits.CurrentReplicationDuration),
        typeof(Code.Gameplay.Features.Rabbits.Dead),
        typeof(Code.Gameplay.Features.Rabbits.DeadByInfection),
        typeof(Code.Gameplay.Features.Rabbits.DefaultReplicationDuration),
        typeof(Code.Gameplay.Features.Rabbits.InDanger),
        typeof(Code.Gameplay.Features.Rabbits.InSafety),
        typeof(Code.Gameplay.Features.Rabbits.InvalidReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.MovingFinished),
        typeof(Code.Gameplay.Features.Rabbits.MovingInterval),
        typeof(Code.Gameplay.Features.Rabbits.MovingToReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.MovingUp),
        typeof(Code.Gameplay.Features.Rabbits.NearReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.OnGround),
        typeof(Code.Gameplay.Features.Rabbits.ProcessingDeath),
        typeof(Code.Gameplay.Features.Rabbits.Rabbit),
        typeof(Code.Gameplay.Features.Rabbits.RabbitAnimatorComponent),
        typeof(Code.Gameplay.Features.Rabbits.RabbitColorTypeComponent),
        typeof(Code.Gameplay.Features.Rabbits.RabbitVisualChangerComponent),
        typeof(Code.Gameplay.Features.Rabbits.Replicating),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationAvailable),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationBlocked),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationExpired),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationFinished),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationInterval),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationTimeLeft),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationTimeUp),
        typeof(Code.Gameplay.Features.Rabbits.ResetReplicationProcess),
        typeof(Code.Gameplay.Features.Rabbits.Sociopath),
        typeof(Code.Gameplay.Features.Rabbits.SociopathVisualApplied),
        typeof(Code.Gameplay.Features.Rabbits.StallParentIndex),
        typeof(Code.Gameplay.Features.Rabbits.TimeLeftForMoving),
        typeof(Code.Gameplay.Features.Rabbits.TimeLeftForNextReplication),
        typeof(Code.Gameplay.Features.Rabbits.ValidReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.WaitingForMoving),
        typeof(Code.Gameplay.Features.Rabbits.WaitingForNextReplicationUp),
        typeof(Code.Gameplay.Features.Rabbits.WaitingReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.WaitReplicationDuration),
        typeof(Code.Gameplay.Features.Rabbits.WaitReplicationTimeLeft),
        typeof(Code.Gameplay.Features.Rabbits.WantToReplicate),
        typeof(Code.Gameplay.Features.Selection.AfterDragPosition),
        typeof(Code.Gameplay.Features.Selection.CleanupUnselectMark),
        typeof(Code.Gameplay.Features.Selection.DragCanceled),
        typeof(Code.Gameplay.Features.Selection.DragFinished),
        typeof(Code.Gameplay.Features.Selection.Dragging),
        typeof(Code.Gameplay.Features.Selection.DragStarted),
        typeof(Code.Gameplay.Features.Selection.DragStopped),
        typeof(Code.Gameplay.Features.Selection.EntitiesForReleaseQueue),
        typeof(Code.Gameplay.Features.Selection.EntitiesForSelectionQueue),
        typeof(Code.Gameplay.Features.Selection.FollowSelectCenterSpeed),
        typeof(Code.Gameplay.Features.Selection.HasSelections),
        typeof(Code.Gameplay.Features.Selection.MoveToAfterDragPositionSpeed),
        typeof(Code.Gameplay.Features.Selection.MovingToAfterDragPosition),
        typeof(Code.Gameplay.Features.Selection.MovingToConveyorBeltAfterDrag),
        typeof(Code.Gameplay.Features.Selection.MultipleSelectionWindowComponent),
        typeof(Code.Gameplay.Features.Selection.ReleaseFromDragUp),
        typeof(Code.Gameplay.Features.Selection.SavedPositionBeforeDrag),
        typeof(Code.Gameplay.Features.Selection.Selectable),
        typeof(Code.Gameplay.Features.Selection.SelectCenterPosition),
        typeof(Code.Gameplay.Features.Selection.SelectCenterRadius),
        typeof(Code.Gameplay.Features.Selection.Selected),
        typeof(Code.Gameplay.Features.Selection.SelectedEntities),
        typeof(Code.Gameplay.Features.Selection.Selection),
        typeof(Code.Gameplay.Features.Selection.SelectionBounds),
        typeof(Code.Gameplay.Features.Selection.SelectionDragMaxTime),
        typeof(Code.Gameplay.Features.Selection.SelectionDragTimeLeft),
        typeof(Code.Gameplay.Features.Selection.ShiftFromSelect),
        typeof(Code.Gameplay.Features.Selection.StoppedWaitingMouseDragFinish),
        typeof(Code.Gameplay.Features.Selection.UnselectSelectedEntities),
        typeof(Code.Gameplay.Features.Selection.WaitingMouseDragFinish),
        typeof(Code.Gameplay.Features.SinkingIslands.CurrentRabbitsAmountBeforeDive),
        typeof(Code.Gameplay.Features.SinkingIslands.DelayBeforeDive),
        typeof(Code.Gameplay.Features.SinkingIslands.DelayBeforeDiveLeft),
        typeof(Code.Gameplay.Features.SinkingIslands.IslandStalls),
        typeof(Code.Gameplay.Features.SinkingIslands.JustSunken),
        typeof(Code.Gameplay.Features.SinkingIslands.MaxRabbitsAmountBeforeDive),
        typeof(Code.Gameplay.Features.SinkingIslands.NextDiveTime),
        typeof(Code.Gameplay.Features.SinkingIslands.NextDiveTimeLeft),
        typeof(Code.Gameplay.Features.SinkingIslands.SinkingByTimeIsland),
        typeof(Code.Gameplay.Features.SinkingIslands.SinkingByWeightIsland),
        typeof(Code.Gameplay.Features.SinkingIslands.SinkingIsland),
        typeof(Code.Gameplay.Features.SinkingIslands.StayOnIsland),
        typeof(Code.Gameplay.Features.SinkingIslands.Sunken),
        typeof(Code.Gameplay.Features.SinkingIslands.Surfaced),
        typeof(Code.Gameplay.Features.SinkingIslands.ToSurfaceTime),
        typeof(Code.Gameplay.Features.SinkingIslands.ToSurfaceTimeLeft),
        typeof(Code.Gameplay.Features.SinkingIslands.WaitingDiveIsland),
        typeof(Code.Gameplay.Features.SinkingIslands.WaitingSurfaceIsland),
        typeof(Code.Gameplay.Features.Stalls.RabbitsAmount),
        typeof(Code.Gameplay.Features.Stalls.Stall),
        typeof(Code.Gameplay.Features.Stalls.StallBounds),
        typeof(Code.Gameplay.Features.Stalls.StallIndex),
        typeof(Code.Gameplay.Features.Statuses.Affected),
        typeof(Code.Gameplay.Features.Statuses.Applied),
        typeof(Code.Gameplay.Features.Statuses.ApplierStatusLink),
        typeof(Code.Gameplay.Features.Statuses.Duration),
        typeof(Code.Gameplay.Features.Statuses.Period),
        typeof(Code.Gameplay.Features.Statuses.PoisonStatus),
        typeof(Code.Gameplay.Features.Statuses.RabiesStatus),
        typeof(Code.Gameplay.Features.Statuses.Status),
        typeof(Code.Gameplay.Features.Statuses.StatusTypeIdComponent),
        typeof(Code.Gameplay.Features.Statuses.TimeLeft),
        typeof(Code.Gameplay.Features.Statuses.TimeSinceLastTick),
        typeof(Code.Gameplay.Features.Statuses.Unapplied),
        typeof(Code.Gameplay.Features.Statuses.ValidStatus),
        typeof(Code.Gameplay.Features.TargetCollection.CollectingTargetsContinuously),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsInterval),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsTimeLeft),
        typeof(Code.Gameplay.Features.TargetCollection.ProcessedTargets),
        typeof(Code.Gameplay.Features.TargetCollection.ReadyToCollectTargets),
        typeof(Code.Gameplay.Features.TargetCollection.TargetBuffer),
        typeof(Code.Gameplay.Features.TargetCollection.TargetCollectionCastPoint),
        typeof(Code.Gameplay.Features.TargetCollection.TargetCollectionLayerMask),
        typeof(Code.Gameplay.Features.TargetCollection.TargetLimit)
    };
}
